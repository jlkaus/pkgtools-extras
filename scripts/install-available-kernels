#!/bin/bash

function cleanup() {
    if [ -n "$TMPDIR" ]; then
	rm -rf $TMPDIR
    fi
}

function warn_msg() {
    echo "*** WARN: " "$@" >&2
}

function error_msg() {
    echo "*** ERROR: " "$@" >&2
}

function abort_clean() {
    exit_status=$1
    shift
    error_msg "$@"
    cleanup
    exit ${exit_status}
}

TMPDIR=$( mktemp -d --tmpdir install-available-kernels.XXXXXX )
if [ $? -ne 0 ]; then
    abort_clean 73 "Unable to create a temporary directory ($?)."
fi

trap 'cleanup' 2 14 15 EXIT

# Options for:
#  repo selection.  Default to just slackware,slackware64.  --testing adds testing.
#  --no-huge, --no-generic.  Default to include both.
#  --no-modules.  Default includes them.
#  --source.  Default doesn't include source package.
#  --dry-run.  Only show packages that will be installed, don't actually install them.
REPOS=slackware,slackware64
INCLUDE_HUGE=^kernel-huge$
INCLUDE_GENERIC=^kernel-generic$
INCLUDE_MODULES=^kernel-modules$
INCLUDE_SOURCE=
DRY_RUN=

while [ -n "$1" ]; do
    case $1 in
	--testing|-t)
	    REPOS="${REPOS},testing"
	    shift
	    ;;
	--no-generic|-h)
	    INCLUDE_GENERIC=""
	    shift
	    ;;
	--no-huge|-g)
	    INCLUDE_HUGE=""
	    shift
	    ;;
	--no-modules)
	    INCLUDE_MODULES=""
	    shift
	    ;;
	--source|-s)
	    INCLUDE_SOURCE="^kernel-source$"
	    shift
	    ;;
	--dry-run|-d)
	    DRY_RUN=1
	    shift
	    ;;
	*)
	    abort_clean 64 "Unknown parameter $1"
	    ;;
    esac
done

if [ -z "$INCLUDE_HUGE" -a -z "$INCLUDE_GENERIC" -a -z "$INCLUDE_MODULES" -a -z "$INCLUDE_SOURCE" ]; then
    # Nothing to do.
    abort_clean 64 "Useless to install nothing."
fi

PKGLIST="$INCLUDE_HUGE $INCLUDE_GENERIC $INCLUDE_MODULES $INCLUDE_SOURCE"

if [ -n "$DRY_RUN" ]; then
    findpkg -s available -r $REPOS $PKGLIST
else
    findpkg -s available -r $REPOS $PKGLIST | awk '{print $4}' | xargs -r fetchpkg -d $TMPDIR
    installpkg $TMPDIR/*
fi

cleanup
