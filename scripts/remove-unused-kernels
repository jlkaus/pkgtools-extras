#!/bin/bash

# Allow a --dry-run mode
# Use check-kernels to find the installed but unused list
# Allow a --keep option to keep specific versions that would otherwise be removed
# Only removes the full set of installed packages for a given version, or nothing for that version.
# That is, if a version's huge kernel is used, but not generic (or modules, etc), no packages for
# that version will be removed.
# If you wish to do that, removepkg that version's generic/modules packages manually, and use appropriate
# options on install-available-kernels to avoid re-installing them later.

TMPDIR=
function cleanup() {
    if [ -n "$TMPDIR" ]; then
	rm -rf $TMPDIR
    fi
}

function warn_msg() {
    echo "*** WARN: " "$@" >&2
}

function error_msg() {
    echo "*** ERROR: " "$@" >&2
}

function abort_clean() {
    exit_status=$1
    shift
    error_msg "$@"
    cleanup
    exit ${exit_status}
}


trap 'cleanup' 2 14 15

KEEPERS=
DRY_RUN=

while [ -n "$1" ]; do
    case $1 in
	--keep|-k)
	    KEEPERS="${KEEPERS} ${2//,/ }"
	    shift
	    shift
	    ;;
	--dry-run|-d)
	    DRY_RUN=1
	    shift
	    ;;
	*)
	    abort_clean 64 "Unknown parameter $1"
	    ;;
    esac
done

KEEPERS=$(echo $KEEPERS)
KEEPERS=${KEEPERS// /|}
REMOVERS=$(check-kernels --unused)
REMOVERS=$(echo $REMOVERS)
REMOVERS=${REMOVERS// /|}

#echo "[$KEEPERS]"
#echo "[$REMOVERS]"

INST_PKGS=$(findpkg -s installed ^kernel-huge$ ^kernel-generic$ ^kernel-modules$ ^kernel-source$ | awk "((\$4~/^kernel-.*-(${REMOVERS})-[^-]+-[^-]+$/) && (\$4 !~ /^kernel-.*-(${KEEPERS})-[^-]+-[^-]+$/)) {print \$4}")
for x in $INST_PKGS; do
    if [ -n "$DRY_RUN" ]; then
	echo $x
    else
	removepkg $x
    fi
done

cleanup
